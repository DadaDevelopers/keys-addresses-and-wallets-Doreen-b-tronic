What is the difference between hardened and non hardened keys
In non-hardened derivation (child index < 2³¹) child public keys can be derived from the parent extended public key (xpub) + child index. It is useful for “watch-only” wallets where you give xpub to a server and it can derive receiving addresses without access to private keys. However it is vulnerable if someone obtains an extended private key + non-hardened child private key (there are known attacks that can recover parent private key in special cases), but typical non-hardened usage is safe if private keys are kept secret.
On the other hand hardened derivation (child index >= 2³¹, often shown with a trailing apostrophe ' in path, e.g. m/44'/0') It is derived using the parent private key (not the parent public key). The xpub cannot derive hardened children. It also provides extra security/isolation between parent and child i.e someone with the xpub cannot derive these child public keys, so giving out xpub will not reveal hardened children.Required when you want to ensure that knowledge of a child private key plus the parent xpub cannot be used to recover the parent private key (see BIP32 security rationale).

Application use is hardened for account and high-sensitivity levels (e.g. m/44'/0'/0') so that exposing an xpub at a higher level doesn't expose certain children. Use non-hardened at the change/address index level so watch-only setups are possible.
